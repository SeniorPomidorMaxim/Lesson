

def show_note():
    selected_item = list_notes.selectedItems()[0].text()
    for note in notes:
        if note[0] == selected_item:
            field_text.setPlainText(note[1])
Эта функция вызывается, когда пользователь кликает на заметку в списке (list_notes). Она получает текст выбранной заметки, и затем проходится по списку notes, который хранит все заметки. Когда находит заметку с совпадающим именем (note[0] == selected_item), она устанавливает текст этой заметки в поле field_text. Таким образом, текст выбранной заметки отображается в поле ввода field_text.


def add_note():
    note_name, ok = QInputDialog.getText(main_window, "Добавить заметку", "Название заметки:")
    if ok and note_name:
        note = [note_name, '']
        notes.append(note)
        list_notes.addItem(note[0])
Эта функция вызывается при нажатии на кнопку "Создать заметку". Она испол��зует QInputDialog.getText для получения названия новой заметки от пользователя. Если пользователь ввел название и подтвердил диалоговое окно (ok), то создается новая заметка в виде списка [note_name, ''], где note_name - это название заметки, а '' - пустой текст заметки. Затем эта новая заметка добавляется в список notes, и ее название добавляется в виджет list_notes.



def save_note():
    selected_item = list_notes.selectedItems()
    if selected_item:
        key = selected_item[0].text()
        for note in notes:
            if note[0] == key:
                note[1] = field_text.toPlainText()
                print(notes)
Эта функция вызывается при нажатии на кнопку "Сохранить заметку". Она проверяет, есть ли выбранная заметка в списке list_notes. Если выбрана, то она получает текст этой заметки и обновляет его значением из поля field_text. В данном случае, обновление означает просто замену текста в заметке. После обновления, текущее состояние списка notes выводится в консоль с помощью print. Это может быть полезно для отладки.

Таким образом, эти функции реализуют базовый функционал работы с заметками: отображение текста выбранной заметки, создание нов��й заметки и сохранение изменений в существующей заметке.